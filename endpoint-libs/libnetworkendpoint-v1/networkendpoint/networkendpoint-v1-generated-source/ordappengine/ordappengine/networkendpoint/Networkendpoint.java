/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-10-30 15:57:41 UTC)
 * on 2013-11-21 at 19:06:58 UTC 
 * Modify at your own risk.
 */

package ordappengine.ordappengine.networkendpoint;

/**
 * Service definition for Networkendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link NetworkendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Networkendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.15.0-rc of the networkendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://postermanagementsystem.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "networkendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Networkendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Networkendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "authenticateSession".
   *
   * This request holds the parameters needed by the the networkendpoint server.  After setting any
   * optional parameters, call the {@link AuthenticateSession#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public AuthenticateSession authenticateSession() throws java.io.IOException {
    AuthenticateSession result = new AuthenticateSession();
    initialize(result);
    return result;
  }

  public class AuthenticateSession extends NetworkendpointRequest<ordappengine.ordappengine.networkendpoint.model.BackendSession> {

    private static final String REST_PATH = "authenticateSession";

    /**
     * Create a request for the method "authenticateSession".
     *
     * This request holds the parameters needed by the the networkendpoint server.  After setting any
     * optional parameters, call the {@link AuthenticateSession#execute()} method to invoke the remote
     * operation. <p> {@link AuthenticateSession#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected AuthenticateSession() {
      super(Networkendpoint.this, "POST", REST_PATH, null, ordappengine.ordappengine.networkendpoint.model.BackendSession.class);
    }

    @Override
    public AuthenticateSession setAlt(java.lang.String alt) {
      return (AuthenticateSession) super.setAlt(alt);
    }

    @Override
    public AuthenticateSession setFields(java.lang.String fields) {
      return (AuthenticateSession) super.setFields(fields);
    }

    @Override
    public AuthenticateSession setKey(java.lang.String key) {
      return (AuthenticateSession) super.setKey(key);
    }

    @Override
    public AuthenticateSession setOauthToken(java.lang.String oauthToken) {
      return (AuthenticateSession) super.setOauthToken(oauthToken);
    }

    @Override
    public AuthenticateSession setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AuthenticateSession) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AuthenticateSession setQuotaUser(java.lang.String quotaUser) {
      return (AuthenticateSession) super.setQuotaUser(quotaUser);
    }

    @Override
    public AuthenticateSession setUserIp(java.lang.String userIp) {
      return (AuthenticateSession) super.setUserIp(userIp);
    }

    @Override
    public AuthenticateSession set(String parameterName, Object value) {
      return (AuthenticateSession) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "logout".
   *
   * This request holds the parameters needed by the the networkendpoint server.  After setting any
   * optional parameters, call the {@link Logout#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Logout logout() throws java.io.IOException {
    Logout result = new Logout();
    initialize(result);
    return result;
  }

  public class Logout extends NetworkendpointRequest<Void> {

    private static final String REST_PATH = "logout";

    /**
     * Create a request for the method "logout".
     *
     * This request holds the parameters needed by the the networkendpoint server.  After setting any
     * optional parameters, call the {@link Logout#execute()} method to invoke the remote operation.
     * <p> {@link
     * Logout#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Logout() {
      super(Networkendpoint.this, "POST", REST_PATH, null, Void.class);
    }

    @Override
    public Logout setAlt(java.lang.String alt) {
      return (Logout) super.setAlt(alt);
    }

    @Override
    public Logout setFields(java.lang.String fields) {
      return (Logout) super.setFields(fields);
    }

    @Override
    public Logout setKey(java.lang.String key) {
      return (Logout) super.setKey(key);
    }

    @Override
    public Logout setOauthToken(java.lang.String oauthToken) {
      return (Logout) super.setOauthToken(oauthToken);
    }

    @Override
    public Logout setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Logout) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Logout setQuotaUser(java.lang.String quotaUser) {
      return (Logout) super.setQuotaUser(quotaUser);
    }

    @Override
    public Logout setUserIp(java.lang.String userIp) {
      return (Logout) super.setUserIp(userIp);
    }

    @Override
    public Logout set(String parameterName, Object value) {
      return (Logout) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setBackendSessionToken".
   *
   * This request holds the parameters needed by the the networkendpoint server.  After setting any
   * optional parameters, call the {@link SetBackendSessionToken#execute()} method to invoke the
   * remote operation.
   *
   * @param token
   * @return the request
   */
  public SetBackendSessionToken setBackendSessionToken(java.lang.String token) throws java.io.IOException {
    SetBackendSessionToken result = new SetBackendSessionToken(token);
    initialize(result);
    return result;
  }

  public class SetBackendSessionToken extends NetworkendpointRequest<Void> {

    private static final String REST_PATH = "setBackendSessionToken/{token}";

    /**
     * Create a request for the method "setBackendSessionToken".
     *
     * This request holds the parameters needed by the the networkendpoint server.  After setting any
     * optional parameters, call the {@link SetBackendSessionToken#execute()} method to invoke the
     * remote operation. <p> {@link SetBackendSessionToken#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param token
     * @since 1.13
     */
    protected SetBackendSessionToken(java.lang.String token) {
      super(Networkendpoint.this, "POST", REST_PATH, null, Void.class);
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public SetBackendSessionToken setAlt(java.lang.String alt) {
      return (SetBackendSessionToken) super.setAlt(alt);
    }

    @Override
    public SetBackendSessionToken setFields(java.lang.String fields) {
      return (SetBackendSessionToken) super.setFields(fields);
    }

    @Override
    public SetBackendSessionToken setKey(java.lang.String key) {
      return (SetBackendSessionToken) super.setKey(key);
    }

    @Override
    public SetBackendSessionToken setOauthToken(java.lang.String oauthToken) {
      return (SetBackendSessionToken) super.setOauthToken(oauthToken);
    }

    @Override
    public SetBackendSessionToken setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetBackendSessionToken) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetBackendSessionToken setQuotaUser(java.lang.String quotaUser) {
      return (SetBackendSessionToken) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetBackendSessionToken setUserIp(java.lang.String userIp) {
      return (SetBackendSessionToken) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public SetBackendSessionToken setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public SetBackendSessionToken set(String parameterName, Object value) {
      return (SetBackendSessionToken) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setStorageManager".
   *
   * This request holds the parameters needed by the the networkendpoint server.  After setting any
   * optional parameters, call the {@link SetStorageManager#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link ordappengine.ordappengine.networkendpoint.model.StorageManager}
   * @return the request
   */
  public SetStorageManager setStorageManager(ordappengine.ordappengine.networkendpoint.model.StorageManager content) throws java.io.IOException {
    SetStorageManager result = new SetStorageManager(content);
    initialize(result);
    return result;
  }

  public class SetStorageManager extends NetworkendpointRequest<Void> {

    private static final String REST_PATH = "setStorageManager";

    /**
     * Create a request for the method "setStorageManager".
     *
     * This request holds the parameters needed by the the networkendpoint server.  After setting any
     * optional parameters, call the {@link SetStorageManager#execute()} method to invoke the remote
     * operation. <p> {@link SetStorageManager#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link ordappengine.ordappengine.networkendpoint.model.StorageManager}
     * @since 1.13
     */
    protected SetStorageManager(ordappengine.ordappengine.networkendpoint.model.StorageManager content) {
      super(Networkendpoint.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public SetStorageManager setAlt(java.lang.String alt) {
      return (SetStorageManager) super.setAlt(alt);
    }

    @Override
    public SetStorageManager setFields(java.lang.String fields) {
      return (SetStorageManager) super.setFields(fields);
    }

    @Override
    public SetStorageManager setKey(java.lang.String key) {
      return (SetStorageManager) super.setKey(key);
    }

    @Override
    public SetStorageManager setOauthToken(java.lang.String oauthToken) {
      return (SetStorageManager) super.setOauthToken(oauthToken);
    }

    @Override
    public SetStorageManager setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetStorageManager) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetStorageManager setQuotaUser(java.lang.String quotaUser) {
      return (SetStorageManager) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetStorageManager setUserIp(java.lang.String userIp) {
      return (SetStorageManager) super.setUserIp(userIp);
    }

    @Override
    public SetStorageManager set(String parameterName, Object value) {
      return (SetStorageManager) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signIn".
   *
   * This request holds the parameters needed by the the networkendpoint server.  After setting any
   * optional parameters, call the {@link SignIn#execute()} method to invoke the remote operation.
   *
   * @param emailAddress
   * @param password
   * @return the request
   */
  public SignIn signIn(java.lang.String emailAddress, java.lang.String password) throws java.io.IOException {
    SignIn result = new SignIn(emailAddress, password);
    initialize(result);
    return result;
  }

  public class SignIn extends NetworkendpointRequest<ordappengine.ordappengine.networkendpoint.model.BackendSession> {

    private static final String REST_PATH = "signIn/{emailAddress}/{password}";

    /**
     * Create a request for the method "signIn".
     *
     * This request holds the parameters needed by the the networkendpoint server.  After setting any
     * optional parameters, call the {@link SignIn#execute()} method to invoke the remote operation.
     * <p> {@link
     * SignIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param emailAddress
     * @param password
     * @since 1.13
     */
    protected SignIn(java.lang.String emailAddress, java.lang.String password) {
      super(Networkendpoint.this, "POST", REST_PATH, null, ordappengine.ordappengine.networkendpoint.model.BackendSession.class);
      this.emailAddress = com.google.api.client.util.Preconditions.checkNotNull(emailAddress, "Required parameter emailAddress must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public SignIn setAlt(java.lang.String alt) {
      return (SignIn) super.setAlt(alt);
    }

    @Override
    public SignIn setFields(java.lang.String fields) {
      return (SignIn) super.setFields(fields);
    }

    @Override
    public SignIn setKey(java.lang.String key) {
      return (SignIn) super.setKey(key);
    }

    @Override
    public SignIn setOauthToken(java.lang.String oauthToken) {
      return (SignIn) super.setOauthToken(oauthToken);
    }

    @Override
    public SignIn setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignIn) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignIn setQuotaUser(java.lang.String quotaUser) {
      return (SignIn) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignIn setUserIp(java.lang.String userIp) {
      return (SignIn) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String emailAddress;

    /**

     */
    public java.lang.String getEmailAddress() {
      return emailAddress;
    }

    public SignIn setEmailAddress(java.lang.String emailAddress) {
      this.emailAddress = emailAddress;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public SignIn setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public SignIn set(String parameterName, Object value) {
      return (SignIn) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Networkendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Networkendpoint}. */
    @Override
    public Networkendpoint build() {
      return new Networkendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link NetworkendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setNetworkendpointRequestInitializer(
        NetworkendpointRequestInitializer networkendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(networkendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
